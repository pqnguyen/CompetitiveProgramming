MAX_INT = 1e6
MIN_INT = -1e6


def findMedianSortedArrays(a, b):
    if len(a) > len(b):
        findMedianSortedArrays(b, a)

    x = len(a)
    y = len(b)

    low, high = 0, x
    while low <= high:
        partitionX = (low + high) // 2
        partitionY = (x + y + 1) // 2 - partitionX

        maxLeftX = MIN_INT if partitionX == 0 else a[partitionX - 1]
        minRightX = MAX_INT if partitionX == x else a[partitionX]

        maxLeftY = MIN_INT if partitionY == 0 else b[partitionY - 1]
        minRightY = MAX_INT if partitionY == y else b[partitionY]

        if maxLeftX <= minRightY and maxLeftY <= minRightX:
            if (x + y) % 2 == 0:
                return (max(maxLeftX, maxLeftY) + min(minRightX, minRightY)) / 2
            else:
                return max(maxLeftX, maxLeftY)
        elif maxLeftX > minRightY:
            high = partitionX - 1
        else:
            low = partitionX + 1
    return -1


res = findMedianSortedArrays([2, 3, 6, 7], [1, 4, 5, 8])
print(res)
