{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"se",
				"setData"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\n#define FastIO ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)\n#define FileIO freopen(\"input.txt\", \"rt\", stdin); freopen(\"output.txt\", \"wt\", stdout)\n\n#define Rep(var, a, b) for (int var = a; var <= b; var++)\n#define For(var, a, b) for (int var = a; var < b; var++)\n#define Forr(var, a, b) for (int var = a; var >= b; var--)\n#define Foreach(it,a) for(__typeof(a.begin()) it = a.begin(); it != a.end(); ++it)\n\n#define db(x) { cout << #x << \" = \" << x << endl; }\n\n#define pii pair<int, int>\n#define pll pair<ll, ll>\n#define mk(x, y) make_pair(x, y)\n\nconst int MAX = 300005;\nconst ll INF = 3 * 1e18 + 10;\n\nstruct Segment {\n    int index, first, second;\n    bool inline operator < (const Segment &rhs) const {\n        return (first < rhs.first || (first == rhs.first && second >= rhs.second));\n    }\n};\n\nint main() {\n    FastIO;\n    FileIO;\n    int n, l, r;\n    Segment a[MAX];\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) {\n        scanf(\"%d%d\", &a[i].first, &a[i].second);\n        a[i].index = i + 1;\n    }\n    sort(a, a + n);\n    for (int i = 1; i < n; i++)\n        if (a[i - 1].second >= a[i].second) {\n            printf(\"%d %d\", a[i].index, a[i - 1].index);\n            return 0;\n        }\n    printf(\"-1 -1\");\n    return 0;\n}",
			"file": "main.cpp",
			"file_size": 1333,
			"file_write_time": 131703347510000000,
			"settings":
			{
				"buffer_size": 1317,
				"line_ending": "Unix"
			}
		},
		{
			"file": "input.txt",
			"settings":
			{
				"buffer_size": 14,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "output.txt",
			"settings":
			{
				"buffer_size": 5,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Volumes/data/CompetiveProgramming"
	],
	"file_history":
	[
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"a.",
			"a.f",
			"b",
			"Node"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "/Volumes/data/CompetiveProgramming"
		}
	],
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1317,
						"regions":
						{
						},
						"selection":
						[
							[
								594,
								594
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 20.0,
						"translation.y": 2.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "input.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14,
						"regions":
						{
						},
						"selection":
						[
							[
								14,
								14
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "output.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			],
			[
				2,
				0,
				3,
				1
			]
		],
		"cols":
		[
			0.0,
			0.579165195701,
			0.812076437621,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
